<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ぴしめも</title>
    <link>https://pishiko.github.io/posts/</link>
    <description>Recent content in Posts on ぴしめも</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Wed, 01 Apr 2020 21:46:39 +0900</lastBuildDate>
    
	<atom:link href="https://pishiko.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>匿名LINEBotを作った</title>
      <link>https://pishiko.github.io/posts/anonymas-chat/</link>
      <pubDate>Wed, 01 Apr 2020 21:46:39 +0900</pubDate>
      
      <guid>https://pishiko.github.io/posts/anonymas-chat/</guid>
      <description>匿名LINEBotを作った ！ この記事は以前はてなブログに書いたものを再編集したものです
 概要   LINEのBotを公開しました。
いままで身内向けのBOTを作ることはあったけど、初めてオープンなのを作りました。
LINEのBOTを作るにはHTTPリクエストを受けるサーバーが必要なんですが、サーバーを立てるのはお金がかかります。そこで今回は無料でそれっぽいことができるGoogleAppsScriptを用いてやってみました。
ソースコード https://github.com/pishiko/anonymous-linechatbot
実装したこと   基本機能（発言を他の利用者に拡散）
  アイコンの実装
  ミュート機能
  解説   まずLINE APIで多数にメッセージを配信するには宛先のuserIdを指定する必要があります。しかし、Botと友達になっているユーザーのリストはAPIでは手に入らないため、自分で用意する必要があります。なので、友達登録されたときのイベントを使って記録していきます。
次に記録ですが、DBをGASでお手軽に実装するにはGoogleSpreadSheetを用います。視覚的にも分かりやすいし簡単だし、ちょっと遅いけど使えます。
アイコンはキューをGSSで実装して、友達登録時にユーザーリストにIDと一緒にします。友達をやめたときはアイコンキューに戻してやって、ユーザーリストからIDごと消してやります。
ミュート機能はユーザーがミュートかどうかリストに保存して、LINE APIのリッチメニューから操作できるようにします。リッチメニューはLINE @MANAGERからぽちぽちで作れます。リッチメニューのボタンが押されたらキーワードを発言するように設定して、それをGASでキャッチします。
最後に発言をほかの登録者に拡散するようにします。LINE APIのイベントでメッセージ受信をキャッチして、userIdからユーザーリストを検索してアイコンを取得、そのあとユーザーリストの発信者以外かつミュートになっていない人に成形したメッセージを配信します。
おわり</description>
    </item>
    
    <item>
      <title>製作物まとめ</title>
      <link>https://pishiko.github.io/posts/seisakubutu-matome/</link>
      <pubDate>Mon, 30 Mar 2020 19:23:16 +0900</pubDate>
      
      <guid>https://pishiko.github.io/posts/seisakubutu-matome/</guid>
      <description>制作物まとめ 個人的に作ったもの一覧です．詳細の記事も随時追加していきます．
YoutubeShareHub   Youtubeの共有を便利にするPWAアプリです． GithubPages上で動いています．
サイト https://pishiko.github.io/youtube-share-hub/
解説 https://pishiko.github.io/posts/youtube-share-hub/
LINE匿名チャット LINEをあえて匿名掲示板みたいな使い方をしてみようというサービス． BOTと友達になるだけで繋がれます． GoogleAppsScript上で動いています．
  解説 https://pishiko.github.io/posts/anonymas-chat/
Github https://github.com/pishiko/anonymous-linechatbot
カラオケ生成ツール Youtubeの動画をカラオケ動画に変換してくれるツールです．JOYSOUNDで動画を流して歌います． Python + ffmpeg製です
  Github https://github.com/pishiko/you-karaoke
facerigもどき Unity＋Python＋Live2D
  学科掲示板通知BOT 学科掲示板が使い勝手が悪かったのでスクレイピングして通知するLINEBot． GoogleAppsScript上で動いてます．
  Github https://github.com/pishiko/tuatsboard-linebot
このブログ HugoとGithubPagesで作ってます．
  ページ https://pishiko.github.io/
解説 https://pishiko.github.io/posts/hugo1/
discordBOT discordのBotです．Python + discord.pyでHeroku上で動いています． サーバの管理からチーム振り分けや，VCで音楽を再生する機能も実装しました．
  pdf Miner 英文のpdfから英単語の頻出リストを出力するPythonスクリプトです．
Github https://github.com/pishiko/pdf-word-count
テトリス C++ とDirectXで実装したテトリスです．
テトリスできた～～～ pic.twitter.com/o9rLVfejsb
&amp;mdash; pishiko (@pishitaro_) September 1, 2017  OculusQuest開発 スタンドアロンのVRHMDであるOculusQuestで動作する積み木アプリ． Unity製です．</description>
    </item>
    
    <item>
      <title>Youtube Share Hubを作った</title>
      <link>https://pishiko.github.io/posts/youtube-share-hub/</link>
      <pubDate>Mon, 30 Mar 2020 04:32:22 +0900</pubDate>
      
      <guid>https://pishiko.github.io/posts/youtube-share-hub/</guid>
      <description>Youtube Share Hubを作った →https://pishiko.github.io/youtube-share-hub/
どんなの？ こんなの
  Youtubeの共有メニューから選択してツイートのリンクに遷移するwebアプリケーション
そのまま共有してもURLしか共有できないしTwitterカードも表示されないから不便だったので作りました．
どんな技術使った？  PWA  Web Share Target API   vue.js bootstrap Github Pages  PWAについて 最低構成は以下になる．
index.html メインのアプリ
serviceworker.js ServiceWorkerが動くことでオフラインでもキャッシュで動作したりすることが可能，特にやりたいことが無ければ関数は空でもいい
manifest.json これがキモ．アプリの名前，アイコンから，共有メニューからの動作まで設定できる． 楽ちんジェネレーターもある．アイコンもリサイズしてくれる．https://app-manifest.firebaseapp.com/
Web Share Target API apkのアプリみたいに共有機能が使える．ただし，「なんちゃってホームに追加Webアプリ」とかじゃこの機能は使えない．
ChromeからPWAアプリと認められる条件は以下
 アイコンがpngであること．jpgはだめ ServiceWorkerを用意する manifest.jsonが正しく記述されている  それから，Web Share APIは今のところAndroidでないと使えない．たのむよApple．
そのほか メインはvue.jsで実装．丁寧にエラー処理なども書いた． デザインはbootstrap．楽． Github Pagesはこのブログ立ち上げた時と一緒．
Github Pagesなので，ソースコードはここにあります． https://github.com/pishiko/youtube-share-hub
おわり</description>
    </item>
    
    <item>
      <title>Dash buttonとの闘い(敗北)</title>
      <link>https://pishiko.github.io/posts/dash-button/</link>
      <pubDate>Mon, 17 Feb 2020 10:29:27 +0900</pubDate>
      
      <guid>https://pishiko.github.io/posts/dash-button/</guid>
      <description>要約  Amazon Dash Button をハックしてIoTボタンにしてた 2020年に入ってから使えなくなってた 自爆ファームウェアの配信によって文鎮化されてた  昔々&amp;hellip; 実家暮らしなので母親にご飯を作っていただいているので，ご飯ができると「ご飯できたよ～」と呼ばれます．それがお互いにストレスだったので，キッチンには，押すとPush BulletというサービスからスマホやPCに通知が行くボタンが置いてありました．
仕組みとしては，
 商品発注をオフにしたAmazon Dash Buttonが押される 自宅のサーバで検知（ボタンからのARPリクエストをキャッチ） IFTTTを通してPush Bulletに通知  といったものでした．
ところが 動かなくなってました．とりあえず初期化しようと思ってAmazon アプリから設定しようとしたのですが，設定項目がありませんでした．もしやと思って調べてみたら&amp;hellip;
 Dash Button端末を使用した商品の注文は、2019年8月31日で終了しています。
端末は2019年12月31日に自動的に登録解除およびリセットされるため、お客様による操作は必要ありません。なお、Dash Button端末を廃棄する前に手動での登録解除をご希望の場合は、コンテンツと端末の管理にアクセスして、端末タブから登録を解除できます。お使いのDash Buttonを選択し、登録の解除をクリックしてください。最後に、Dash Button端末を1回押します。ライトが白く点滅した後、赤く点灯します。
 https://www.amazon.co.jp/gp/help/customer/display.html?nodeId=201706050
とのこと．
サービス終了&amp;hellip;
自爆とは どうやら2020年になってからボタンを押してアマゾンのサーバにリクエストを送ると，文鎮化するファームウェアアップデートが実行される模様． スパイ映画でよく見た「なお，このメッセージは自動的に消滅する．」ってやつだ&amp;hellip;
ネットワークから遮断 とりあえずDash Button Hackライブラリの Nekmo/amazon-dash によると，dash-button-na-aws-opf.amazon.com, 0.amazon.pool.ntp.org, 1.amazon.pool.ntp.org, 2.amazon.pool.ntp.org, 3.amazon.pool.ntp .orgからのパケットをブロックすればよいとのこと．
ちなみにntp.orgってなんだろうと思ったらNetwork Time Protocolプロトコルというものっぽい．ネットワーク機器の時間同期に用いるとか．
→まだだめ
Wi-Fiの設定 再設定を試みます．Amazonのアプリには存在しないため，非公式のスクリプトを用いて設定します． fffonion/setup-dashbutton.py
スクリプトの中身自体は，
 Dashボタン長押しで設定モードにする Amazon ConfigureMeというSSIDに接続 http://192.168.0.1/?amzn_ssid=SSID&amp;amp;amzn_pw=PASS にアクセス  て感じでシンプルです．
→でもだめ
最後の手段 https://blog.christophermullins.com/2019/12/20/rescue-your-amazon-dash-buttons/によると，
 ファームウェアアップデートを一度でもしてしまったら終わり 一度Wi-Fiの設定をしたことがあるボタンのみWi-Fiの再設定が可能 ただし古いボタンなら特定の音声を流すことで初期設定が可能  特定の音声っていうのは，ボタンにはマイクがついていて，それによって設定が可能らしい．で，それでバッファの長さチェックがされていないので，オーバーフローさせていい感じにできるらしいです． ふわふわしてますね． その音声ファイルはここ .</description>
    </item>
    
    <item>
      <title>このブログを Hugo&#43;GitHub Pages で作る</title>
      <link>https://pishiko.github.io/posts/hugo1/</link>
      <pubDate>Sun, 02 Feb 2020 09:29:15 +0900</pubDate>
      
      <guid>https://pishiko.github.io/posts/hugo1/</guid>
      <description>Hugo＋GitHub Pages このブログはHugo + github pagesで公開しています．テンプレートのカスタムをしてると意外と情報が無かったです．ということで，Hugoのインストールからブログの更新まで簡単にメモしたいと思います．
そもそもなにそれ Hugoは静的ブログジェネレータというやつです．テンプレートとmarkdownの記事を用意すればhugoでindex.htmlなんかを生成してくれます．Go製です．早いです．
github pagesはリポジトリに置いておいた静的ファイルをホストしてくれるサービスです．
Hugoのインストール Windows10の場合です． https://github.com/gohugoio/hugo/releasesから最新リリースをダウンロードしてパスを通します．Hugo\binなんかにHugo.exeを移してPATHを通します．
そういえばこのときPATHの上限2000文字くらいを超えててGUIだとうまくいかないというのに出会った．とりあえずユーザ環境変数にしておいた．
Hugoのテーマ適用 hugo new site myblog  これでわーっと一式生成してくれます．
その後，https://themes.gohugo.io/で適当なテーマをダウンロードし，\themes\直下に適当な名前（テーマ名とか）にリネームしてディレクトリごとコピーします．
\config.tomlに設定を色々書いていきます．と言っても基本はコピペです．絶対に変えるのは
baseURL = &amp;quot;例 https://pishiko.github.io&amp;quot; theme = &amp;quot;さっきリネームしたテンプレート名&amp;quot;  で，あとは（テンプレートによると思いますが，）\themes\適当なテンプレート名\exampleSite\config.tomlにテンプレート固有の設定があったのでコピペして適宜変更しました．
Hugoでブログ生成 hugo new content\posts\test.md  するとひな形が生成されます． ひな形はこんな感じにすればOK
--- title: &amp;quot;Hello, world!&amp;quot; date: 2020-02-01T23:08:52+09:00 draft: false tags: [&amp;quot;memo&amp;quot;] --- 注意すべきはdraftで，trueだと非公開状態（＝debugモード）のみ公開なのでfalseにしないとデプロイしても反映されなくて泣く．
あとは適当にMarkdownで記事を書く．
ここまで上手くいっていれば，
hugo server -D  でdebugモードでサーバを起動できるので，localhost:1313でブログを確認できます．手直ししても更新検知して再起動してくれるので便利です．
公開まで hugo  これで\publicにindex.html ファイル一式が生成されます．これを公開しましょう．
まずはgithubで新規リポジトリを作成．その時のリポジトリ名はGITHUBのUSERNAME.github.ioにします．あとは
cd public git init git remote add origin git@github.</description>
    </item>
    
    <item>
      <title>Hello, world!</title>
      <link>https://pishiko.github.io/posts/firstpost/</link>
      <pubDate>Sat, 01 Feb 2020 23:08:52 +0900</pubDate>
      
      <guid>https://pishiko.github.io/posts/firstpost/</guid>
      <description>こんにちは．@pishitaro_です．
サークル(？)のブログとは別にメモとしてブログを作ってみました．こっちではプログラミング成果物のメモが主になります．
ちょこちょこ書いていく予定です．
おわり</description>
    </item>
    
  </channel>
</rss>